apiVersion: v1
kind: Service
metadata:
  name: zookeeper
spec:
  ports:
  - name: "2181"
    port: 2181
    targetPort: 2181
  selector:
    io.kompose.service: zookeeper
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: zookeeper
  template:
    metadata:
      labels:
        io.kompose.service: zookeeper
    spec:
      initContainers:
      - image: alpine:3.12
        name: chmod
        volumeMounts:
        - mountPath: /bitnami/zookeeper
          name: bitnamidockerzookeeper-zookeeper-data
        command: [ sh, -c, "chmod 777 /bitnami/zookeeper" ]
      containers:
      - image: bitnami/zookeeper:3.7.1
        name: zookeeper
        ports:
        - containerPort: 2181
        env:
        - name: ALLOW_ANONYMOUS_LOGIN
          value: "yes"
        volumeMounts:
        - mountPath: /bitnami/zookeeper
          name: bitnamidockerzookeeper-zookeeper-data
      volumes:
      - name: bitnamidockerzookeeper-zookeeper-data
        persistentVolumeClaim:
          claimName: bitnamidockerzookeeper-zookeeper-data
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: bitnamidockerzookeeper-zookeeper-data
spec:
  storageClassName: manual
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: tmp-tmp1
spec:
  storageClassName: manual
  # claimRef:
  #   name: bitnamidockerzookeeper-zookeeper-data
  #   namespace: default
  capacity:
    storage: 100Mi
  accessModes:
    - ReadWriteMany
    - ReadWriteOnce
  hostPath:
    path: /volumes/zoo
  #nodeAffinity:
  #  required:
  #    nodeSelectorTerms:
  #      - matchExpressions:
  #        - key: kubernetes.io/hostname
  #          operator: In
  #          values:
  #          - kind-control-plane